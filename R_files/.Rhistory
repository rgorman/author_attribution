(45-18)/45
55*.6
(100-64)/100
.36*45
16.2+33
andrews <-null
andrews <- NULL
((45-18)/45)
(((45-18)/45)*.55)
(((45-18)/45)*55)
(((45-18)/45)*55)+(36/100)
(((45-18)/45)*55)+((36/100)*45)
andrews <-(((45-18)/45)*55)+((36/100)*45)
25/45*55
(25/45*55)
(25/45*55)+(.69*45)
(.69*45)
34/45
34/45*55
.63*45
28.38+41.55
45-11
34+63/145
(34+63)/145
(25/45)
(25/45)*45
sample(100)
rep(0.01, 100)
x <- rep(.01, 100)
x[100] <- .99
x[99:100]
y <- 1:100
sample(x, 20, prob=y)
sample(y, 20, prob=x)
sample(y, 20, replace=T prob=x)
sample(y, 20, replace=TRUE prob=x)
sample(y, 20, replace=TRUE prob=x)
sample(y, 20, replace=TRUE, prob=x)
setwd("C:/rGorman/author_attribution/R_files")
library(XML)
source("code/corpusFunctions.R")
input.dir <- "sWord_input/rel_file"
files.v <- dir(path=input.dir, pattern=".*xml")
book.freqs.l <- list()
for(i in 1:length(files.v)){
doc.object <- xmlTreeParse(file.path(input.dir, files.v[i]), useInternalNodes=TRUE)
chunk.data.l <- getSwordChunkMaster(doc.object, 2000)
book.freqs.l[[files.v[i]]] <-chunk.data.l
}
summary(book.freqs.l)
freqs.l <- lapply(book.freqs.l, my.apply)
freqs.df <- do.call(rbind, freqs.l)
dim(freqs.df)
bookids.v <- gsub(".xml.\\d+", "", rownames(freqs.df))
book.chunk.ids <- paste(bookids.v, freqs.df$ID, sep="_")
freqs.df$ID <- book.chunk.ids
result.t <- xtabs(Freq ~ ID+Var1, data=freqs.df)
final.df <- as.data.frame.matrix(result.t)
author.v <- gsub("_.+", "", rownames(final.df))
length(author.v)
freq.means.v <- colMeans(final.df[, ])
keepers.v <- which(freq.means.v >=.0005)
smaller.df <- final.df[, keepers.v]
dim(smaller.df)
keepers.v <- which(freq.means.v >=.0001)
smaller.df <- final.df[, keepers.v]
dim(smaller.df)
sorted.df <- smaller.df[order(colMeans(smaller.df)), ]
sorted.df[1:3, 1:3]
sorted.df
smaller.df
final.df
results.t[,1]
result.t[,1]
colname(result.t[,1])
colnames(result.t[,1])
rownames(result.t)
colnames(result.t)
smaller.df
head(smaller.df)
tail(smaller.df)
sorted.df <- smaller.df[order(colMeans(smaller.df), decreasing=TRUE), ]
head(smaller.df)
View(smaller.df)
View(sorted.df)
write.csv (smaller.df, file="Rresults/Naive_Bayes_predictions/toSort.csv")
sorted.df <- smaller.df[, order(colMeans(smaller.df), decreasing=TRUE) ]
View(sorted.df)

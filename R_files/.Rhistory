(45-18)/45
55*.6
(100-64)/100
.36*45
16.2+33
andrews <-null
andrews <- NULL
((45-18)/45)
(((45-18)/45)*.55)
(((45-18)/45)*55)
(((45-18)/45)*55)+(36/100)
(((45-18)/45)*55)+((36/100)*45)
andrews <-(((45-18)/45)*55)+((36/100)*45)
25/45*55
(25/45*55)
(25/45*55)+(.69*45)
(.69*45)
34/45
34/45*55
.63*45
28.38+41.55
45-11
34+63/145
(34+63)/145
(25/45)
(25/45)*45
sample(100)
rep(0.01, 100)
x <- rep(.01, 100)
x[100] <- .99
x[99:100]
y <- 1:100
sample(x, 20, prob=y)
sample(y, 20, prob=x)
sample(y, 20, replace=T prob=x)
sample(y, 20, replace=TRUE prob=x)
sample(y, 20, replace=TRUE prob=x)
sample(y, 20, replace=TRUE, prob=x)
setwd("C:/rGorman/author_attribution/R_files")
holder.df <- load(file="Rresults/Naive_Bayes_predictions/toSortPos.csv")
holder.df <- read.csv(file="Rresults/Naive_Bayes_predictions/toSortPos.csv")
View(holder.df)
sorted.df <- holder.df[, order(colMeans(smaller.df), decreasing=TRUE) ]
sorted.df <- holder.df[, order(colMeans(holder.df), decreasing=TRUE) ]
sorted.df <- holder.df[, order(colMeans(holder.df), decreasing=TRUE) ]
sorted.df <- holder.df[, order(colMeans(smaller.df), decreasing=TRUE) ]
colMeans(holder.df)
class(holder.df)
library(XML)
source("code/corpusFunctions.R")
input.dir <- "sWord_input/rel_file"
files.v <- dir(path=input.dir, pattern=".*xml")
book.freqs.l <- list()
for(i in 1:length(files.v)){
doc.object <- xmlTreeParse(file.path(input.dir, files.v[i]), useInternalNodes=TRUE)
chunk.data.l <- getSwordChunkMaster(doc.object, 2000)
book.freqs.l[[files.v[i]]] <-chunk.data.l
}
freqs.l <- lapply(book.freqs.l, my.apply)
freqs.df <- do.call(rbind, freqs.l)
dim(freqs.df)
bookids.v <- gsub(".xml.\\d+", "", rownames(freqs.df))
book.chunk.ids <- paste(bookids.v, freqs.df$ID, sep="_")
freqs.df$ID <- book.chunk.ids
result.t <- xtabs(Freq ~ ID+Var1, data=freqs.df)
dim(result.t)
final.df <- as.data.frame.matrix(result.t)
author.v <- gsub("_.+", "", rownames(final.df))
head(author.v)
unique(author.v)
length(author.v)
freq.means.v <- colMeans(final.df[, ])
keepers.v <- which(freq.means.v >=.001)
smaller.df <- final.df[, keepers.v]
dim(smaller.df)
sorted.df <- smaller.df[, order(colMeans(smaller.df), decreasing=TRUE) ]
View(smaller.df)
View(sorted.df)
seq(5,500, 5)
feature.number.v <- seq(5, 100, 5)
matrix(nrow = 1, ncol = 2)
total.errors.m <- matrix(nrow = 1, ncol = 2)
total.error.m <- colnames(c("features", "sum"))
total.error.m
colnames(total.errors.m)
colnames(total.errors.m) <- c("features", "sum")
total.errors.m
prob.m <- read.csv (file="Rresults/Naive_Bayes_predictions/chunkSize2000/chunk_parameters3.csv")
library(e1071)
library (gmodels)
library(klaR)
testing.index.v <- sample (seq (1, nrow(smaller.df)), 28, prob=prob.m$prob)
testing.data <- smaller.df[testing.index.v, ]
training.data <- smaller.df[-testing.index.v, ]
training.classes <- as.factor(author.v[-testing.index.v])
testing.classes <- as.factor(author.v[testing.index.v])
sWord_classifier <- naiveBayes(training.data, training.classes)
predict(sWord_classifier, testing.data
)
predict(sWord_classifier, testing.data)
hold <- predict(sWord_classifier, testing.data)
class(hold)
errormatrix(testing.classes, hold)
em <-errormatrix(testing.classes, hold)
em
colnames(em)
em["-sum-",]
em[-sum-, -sum-]
em [,13]
em [13,13]
?append
error.v <- NULL
i <- 1
for (i in i:100) {
#create vector of random integers = 10% of obs in smaller.df
testing.index.v <- sample (seq (1, nrow(smaller.df)), 28, prob=prob.m$prob)
#create training and testing data matrices using testing.index.v and its inverse
testing.data <- smaller.df[testing.index.v, ]
training.data <- smaller.df[-testing.index.v, ]
#create vectors of factors giving classes (here = authors) of each row in testing.data and training.data
training.classes <- as.factor(author.v[-testing.index.v])
testing.classes <- as.factor(author.v[testing.index.v])
#train the algorithm using training.data and training classes
sWord_classifier <- naiveBayes(training.data, training.classes)
# check results of predict()
hold <- predict(sWord_classifier, testing.data)
em <-errormatrix(testing.classes, hold)
error.v <- append(error.v, em[13,13])
}
error.v
sum(error.v)
677/2800
